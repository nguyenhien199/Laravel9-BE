# Set the `immutable` cache control options only for assets with a cache busting `v` argument.
map $arg_v $asset_immutable { "" ""; default "immutable"; }
# Set the `$request_id` for old nginx versions (remove string: `#REQUEST_ID:`).
#REQUEST_ID:map '' $request_id { default 'REQUEST_ID'; }
# Map $request_uri does not writing to access_log.
map $request_uri $loggable {
    ~^/assets?(?:$|/) 0;
    ~^/_debugbar(?:$|/) 0;
    ~^/api/docs(?:/|/app/|/cms/|/front/|/admin/)asset 0;
    default 1;
}
# Default format ("$request" = "$request_method $request_uri $server_protocol"):
#log_format combined  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
# Custom format:
log_format customized '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$gzip_ratio" "$http_x_forwarded_for"';

server {
    listen 80       default_server;
    listen [::]:80  default_server;
    listen 443      ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;

    set  $base /var/www/html;
    root $base/public;

    # SSL.
    ssl_certificate     /etc/nginx/certificates/server.crt;
    ssl_certificate_key /etc/nginx/certificates/server.key;
    ssl_verify_client   off;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache   shared:SSL:20m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Basic.
    charset       utf-8;
    server_tokens off;
    sendfile      on;
    tcp_nopush    on;
    tcp_nodelay   on;

    # Logging: error | warn | notice | info | debug.
    access_log /var/log/nginx/access.log customized if=$loggable;
    error_log  /var/log/nginx/error.log  warn;

    # Error page.
    error_page 404 /index.php;
    include    /etc/nginx/snippets/error_pages.conf;

    # Index.
    index index.php index.html index.htm;

    # Set max upload size and increase upload timeout.
    client_max_body_size  256m;
    client_header_timeout 180s;
    client_body_timeout   180s;
    send_timeout          180s;
    keepalive_timeout     180s;

    # Allows you to optimize the HTTP2 bandwitdth.
    client_body_buffer_size 512k;

    # Enable gzip but do not remove ETag headers.
    gzip              on;
    gzip_vary         on;
    gzip_proxied      any;
    gzip_comp_level   6;
    gzip_buffers      16 8k;
    gzip_min_length   256;
    gzip_http_version 1.1;
    gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    # HTTP response headers borrowed `.htaccess`.
    add_header Referrer-Policy                   "no-referrer"       always;
    add_header X-Content-Type-Options            "nosniff"           always;
    add_header X-Download-Options                "noopen"            always;
    add_header X-Frame-Options                   "SAMEORIGIN"        always;
    add_header X-Permitted-Cross-Domain-Policies "none"              always;
    add_header X-Robots-Tag                      "noindex, nofollow" always;
    add_header X-XSS-Protection                  "1; mode=block"     always;

    ## BEGIN: CORS ##
    set $cors_credentials '';
    set $cors_content_type '';
    set $cors_content_length '';
    if ($http_origin ~ '.+') {
        set $cors_credentials 'true';
    }
    if ($request_method = 'OPTIONS') {
        set $cors_content_type 'text/plain';
        set $cors_content_length '0';
    }
    add_header Access-Control-Allow-Origin      $http_origin                         always;
    add_header Access-Control-Allow-Credentials $cors_credentials                    always;
    add_header Access-Control-Allow-Methods     $http_access_control_request_method  always;
    add_header Access-Control-Allow-Headers     $http_access_control_request_headers always;
    add_header Content-Type                     $cors_content_type;
    add_header Content-Length                   $cors_content_length;
    if ($request_method = 'OPTIONS') {
        return 204 no-content;
    }
    ## END: CORS ##

    # Mime types.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # favicon.ico
    location = /favicon.ico { access_log off; log_not_found off; expires max; }
    # robots.txt
    location = /robots.txt  { access_log off; log_not_found off; allow all; }
    # .well-known
    location ~ /\.(?!well-known) { deny all; }
    # Deny access to any files with a .php extension in the uploads directory.
    location ~* /(?:uploads|files)/.*\.php$ { deny all; }
    # Rules borrowed from `.htaccess` to hide certain paths from clients.
    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) { return 404; }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) { return 404; }

    # Handle .php
    location ~ \.php$ {
        gzip off;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # fastcgi pass.
        fastcgi_pass 127.0.0.1:9000;

        # fastcgi params.
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME         $document_root$fastcgi_script_name;
        fastcgi_param PHP_ADMIN_VALUE         "open_basedir=$base/:/usr/lib/php/:/tmp/";
        fastcgi_param PATH_INFO               $fastcgi_path_info;
        fastcgi_param modHeadersAvailable     true;
        fastcgi_param front_controller_active true;

        # fastcgi settings.
        fastcgi_index              index.php;
        fastcgi_buffering          off;
        fastcgi_buffer_size        512k;
        fastcgi_buffers            16 512k;
        fastcgi_busy_buffers_size  512k;
        fastcgi_connect_timeout    180s;
        fastcgi_send_timeout       180s;
        fastcgi_read_timeout       180s;
        fastcgi_max_temp_file_size 0;
        fastcgi_intercept_errors   off;
        fastcgi_request_buffering  off;
        fastcgi_hide_header        X-Powered-By;
        #fastcgi_next_upstream      error invalid_header timeout http_500;
        proxy_temp_file_write_size 512k;
    }

    # Serve static files.
    location ~ \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv|wasm|tflite)$ {
        add_header Cache-Control "public, max-age=15778463, $asset_immutable";
        try_files  $uri /index.php?$query_string;
        expires    7d;
        access_log off;

        location ~ \.wasm$ { default_type application/wasm; }
    }

    # svg, fonts.
    location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
        add_header Access-Control-Allow-Origin "*";
        try_files  $uri /index.php?$query_string;
        expires    7d;
        access_log off;
    }

    # Index fallback.
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}

#server {
#    listen 80      default_server;
#    listen [::]:80 default_server;
#    server_name localhost;
#
#    charset utf-8;
#    server_tokens off;
#
#    # Enforce HTTPS
#    location / {
#        return 301 https://$server_name$request_uri;
#    }
#}
