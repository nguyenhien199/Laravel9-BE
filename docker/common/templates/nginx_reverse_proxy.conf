# Set the `immutable` cache control options only for assets with a cache busting `v` argument.
map $arg_v $asset_immutable { "" ""; default "immutable"; }
# Map $request_uri does not writing to access_log.
map $request_uri $loggable {
    ~^/assets?(?:$|/) 0;
    ~^/_debugbar(?:$|/) 0;
    ~^/api/docs(?:/|/app/|/cms/|/front/|/admin/)asset 0;
    ~^/favicon.ico 0;
    ~^/robots.txt 0;
    default 1;
}
# Connection header for WebSocket reverse proxy.
map $http_upgrade $connection_upgrade { "" close; default upgrade; }
# Map proxy_forwarded_elem.
map $remote_addr $proxy_forwarded_elem {
    # IPv4 addresses can be sent as-is.
    ~^[0-9.]+$ "for=$remote_addr";
    # IPv6 addresses need to be bracketed and quoted.
    ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";
    # Unix domain socket names cannot be represented in RFC 7239 syntax.
    default "for=unknown";
}
# Map proxy_add_forwarded.
map $http_forwarded $proxy_add_forwarded {
    # If the incoming Forwarded header is syntactically valid, append to it.
    "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";
    # Otherwise, replace it.
    default "$proxy_forwarded_elem";
}

# Default format ("$request" = "$request_method $request_uri $server_protocol"):
#log_format combined  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
# Custom format:
log_format customized '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$gzip_ratio" "$http_x_forwarded_for"';

server {
    listen 80       default_server;
    listen [::]:80  default_server;
    listen 443      ssl http2;
    listen [::]:443 ssl http2;
    server_name LOCALHOST www.LOCALHOST;

    # SSL
    ssl_certificate     /etc/nginx/certificates/LOCALHOST.crt;
    ssl_certificate_key /etc/nginx/certificates/LOCALHOST.key;
    ssl_verify_client   off;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;
    ssl_session_cache   shared:SSL:20m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Basic
    charset       utf-8;
    server_tokens off;
    sendfile      on;
    tcp_nopush    on;
    tcp_nodelay   on;

    # Logging: error | warn | notice | info | debug.
    access_log /var/log/nginx/reverse.LOCALHOST.access.log customized if=$loggable;
    error_log  /var/log/nginx/reverse.LOCALHOST.error.log  warn;

    # Set max upload size and increase upload timeout.
    client_max_body_size  256M;
    client_header_timeout 180s;
    client_body_timeout   180s;
    send_timeout          180s;
    keepalive_timeout     180s;

    # Allows you to optimize the HTTP2 bandwitdth.
    client_body_buffer_size 512k;

    # Security headers.
    add_header X-XSS-Protection        "1; mode=block" always;
    add_header X-Content-Type-Options  "nosniff" always;
    add_header Referrer-Policy         "no-referrer-when-downgrade" always;
    add_header Permissions-Policy      "interest-cohort=()" always;

    set $CSP "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline';";
    set $CSP "${CSP} frame-ancestors 'self';";
    set $CSP "${CSP} style-src 'self' 'unsafe-inline' 'unsafe-eval' fonts.googleapis.com;";
    set $CSP "${CSP} script-src 'self' 'unsafe-inline' 'unsafe-eval';";
    add_header Content-Security-Policy $CSP always;

    location / {
        # Proxy pass.
        proxy_pass         https://127.0.0.1:441/;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_pass_header  Server;

        # Proxy headers.
        proxy_set_header Host              $host;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
        proxy_set_header Forwarded         $proxy_add_forwarded;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_set_header X-NginX-Proxy     true;

        proxy_redirect          off;
        proxy_buffering         off;
        proxy_ssl_session_reuse off;
        proxy_ssl_verify        off;

        # Proxy timeouts.
        proxy_connect_timeout 180s;
        proxy_send_timeout    180s;
        proxy_read_timeout    180s;
    }
}

#server {
#    listen 80      default_server;
#    listen [::]:80 default_server;
#    server_name LOCALHOST;
#
#    charset utf-8;
#    server_tokens off;
#
#    # Enforce HTTPS
#    location / {
#        return 301 https://$server_name$request_uri;
#    }
#}
